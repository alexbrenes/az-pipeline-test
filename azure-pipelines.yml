trigger:
- main

pool:
  vmImage: ubuntu-latest

steps:
- script: |
    sudo apt -y install cppcheck npm php php-xml && npm install -g handlebars-cmd
  displayName: 'Install script dependencies and Cppcheck'

- script: |
    git clone https://github.com/alexbrenes/vulnerable-code.git $HOME/vulnerable-code
  displayName: 'Clone repository'

- script: |
    mkdir $HOME/results
    cppcheck --xml-version=2 --enable=all --suppress=missingIncludeSystem . --output-file=$HOME/results/cppcheck-result.xml
  workingDirectory: $(HOME)/vulnerable-code
  displayName: 'Scan the repository'

- script: |
    export FILE=$HOME/results/cppcheck-result.xml
    php -r 'print(json_encode(simplexml_load_string(file_get_contents(getenv("FILE")), "SimpleXMLElement", LIBXML_NOCDATA)));' > $HOME/results/cppcheck-result.json
    tr -d '@' < $HOME/results/cppcheck-result.json > /tmp/cppcheck-result.json
    cat <<EOF > /tmp/nunit-template.hbs
    <?xml version="1.0" encoding="UTF-8"?>
    <test-run name="Cppcheck">
        <test-suite name="Cppcheck" timestamp="TIMESTAMP" hostname="HOSTNAME" tests="2" errors="{{errors.error.length}}" failures="0" skipped="0" time="2.0">
            <test-case name="{{location.attributes.file}}" classname="Cppcheck error" time="1.0">
              {{#each errors.error}}
              <error message="{{attributes.msg}}" type="error:{{attributes.id}}">{{location.attributes.file}}:{{location.attributes.line}}:{{location.attributes.column}}: {{attributes.verbose}}</error>
              {{/each}}
            </test-case>
        </test-suite>
    </test-run>
    EOF
    mkdir /tmp/results
    handlebars /tmp/cppcheck-result.json < /tmp/nunit-template.hbs > /tmp/results/nunit-cppcheck-result.xml
  displayName: 'Convert to NUnit'

- task: PublishTestResults@2
  displayName: 'Publish Test Results'
  inputs:
    testResultsFormat: 'NUnit'
    testResultsFiles: '/tmp/results/nunit-cppcheck-result.xml'